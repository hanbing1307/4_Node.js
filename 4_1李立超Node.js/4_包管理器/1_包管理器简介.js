/* 
    包管理器
        随着项目复杂度的提升，在开发中不可能所有的代码都要手动一行一行的编写，于是我们就需要一些将一些现成写好的代码引入到我们的项目中来帮助我们完成开发，就像是我们之前使用jQuery。jQuery这种外部代码在项目中，我们将其称之为包。

        越是复杂的项目，其中需要引入的包也就越多。随着包数量的增多，包管理的问题也被抬上了桌面。如何下载包？如何删除包？如何更新包？等等一些列的问题在等待我们处理。包管理器便是帮助我们解决这个问题的工具。
*/
/* 
    NPM
        node中的包管理器叫做npm（node package manage），npm是世界上最大的包管理库。作为开发人员，我们可以将自己开发的包上传到npm中共别人使用，也可以直接从npm中下载别人开发好的包，在自家项目中使用。

        npm由以下三个部分组成：

        1. npm网站 （通过npm网站可以查找包，也可以管理自己开发提交到npm中的包。https://www.npmjs.com/）

        2. npm CLI（Command Line Interface 即 命令行）（通过npm的命令行，可以在计算机中操作npm中的各种包（下载和上传等））

        3. 仓库（仓库用来存储包以及包相关的各种信息）

        对于初学者来讲，大多数情况下都是下载并使用npm中的各种包，而少有向npm中上传的操作。所以本节课的重点我们也会放到通过npm下载引用包的各种操作上，而不是上传管理等操作。

        npm在按照node时已经一起安装，所以只有你的node正常安装了，npm自然就可以直接使用了。可以在命令行中输入npm -v来查看npm是否安装成功。
*/

/* 
    Package.Json
        包是一组编写好的代码，可以直接引入到项目中使用。具体来说，包其实就是一个文件夹，文件夹中会包含一个或多个js文件，这些js文件就是包中存放的各种代码。除了必要的代码外，包中还有一个东西是必须的，它叫做包的描述文件 —— package.json

        package.json
            - 用来描述包的json文件。
            - node中通过该文件对项目进行描述
            - 每一个node项目都必须有package.json。
            
            它里边需要一个json格式的数据（json对象），在json文件中通过各个属性来描述包的基本信息，像包名、版本、依赖等包相关的一切信息。它大概长成这个样子：

        {
            "name": "my-awesome-package",
            "version": "1.0.0",
            "author": "Your Name <email@example.com>"
        }

        package.json中包含有哪些字段呢？我们来研究一下：

        name（必备）
            包的名称，可以包含小写字母、_和-

        version（必备）
            包的版本，需要遵从x.x.x的格式
            规则：
            版本从1.0.0开始
            修复错误，兼容旧版（补丁）1.0.1、1.0.2
            添加功能，兼容旧版（小更新）1.1.0
            更新功能，影响兼容（大更新）2.0.0

        author
            包的作者，格式：Your Name <email@example.com>

        description
            包的描述

        repository
            仓库地址（git）
        scripts

        自动脚本
        除了上述的字段外，package.json中还有一些其他字段由于暂时还未涉及，所以我们遇到的时在详细说明。

        通常情况下，我们的自己创建的每一个node项目，都可以被认为是一个包。都应该为其创建package.json描述文件。同时，npm可以帮助我们快速的创建package.json文件。只需要进入项目并输入npm init即可进入npm的交互界面，只需根据提示输入相应信息即可。



*/